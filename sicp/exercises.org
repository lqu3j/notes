* 第一章
** 1.2 请定义一个过程，它以三个数为参数， 返回其中较大两个数字的和
   #+BEGIN_SRC racket
     (define (sum-of-max a b c)
       (if (>= a b)
           (if (>= b c) (+ a b) (+ a c))
           (if (>= a c) (+ a b) (+ b c))))
     (sum-of-max 1 2 3)
     (sum-of-max 1 3 2)
     (sum-of-max 2 1 3)
     (sum-of-max 2 3 1)
     (sum-of-max 3 1 2)
     (sum-of-max 3 2 1)
   #+END_SRC

** 1.3 下面过程分别采用正则序求值和应用序求值会发生什么？
   #+BEGIN_SRC racket
  (define (p) (p))
  (define (test x y)
    (if (= x 0)
        0
        y))
  (test 0 p)
   #+END_SRC
   1. 若采用应用序， 由于p未定义, 会报错
   2. 若采用正则序， 返回值为0
** 1.6 考虑在sqrt-iter中将if使用new-if代替，结果回发生什么？
   #+BEGIN_SRC racket
     (define (new-if predicate then-clause else-clause)
       (cond (predicate then-clause)
             (else else-clause)))
   #+END_SRC
   1. 若采用应用序，则先对表达式进行求值，在代换计算，那么else-clause将陷入无休止递归。
   2. 若采用正则序，则需要完全展开后在求值，那么else-clause同样将陷入休止无递归，仔细分析，只要是递归
      正则序都将陷入无休止递归
